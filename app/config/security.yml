security:
    role_hierarchy:
        ROLE_SUPER_USER:  ROLE_USER
        ROLE_ADMIN:       [ROLE_USER, ROLE_SUPER_USER]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_SUPER_USER, ROLE_ALLOWED_TO_SWITCH]

    providers:
        chain_providers:
            providers: [in_memory] #,user_db]
        in_memory:
            users:
                user:  { password: 24cf843abec65975e31b0600ebc1fa614bc5d044, roles: [ 'ROLE_USER' ] }
                admin: { password: 24cf843abec65975e31b0600ebc1fa614bc5d044, roles: [ 'ROLE_ADMIN' ] }
#        user_db:
#            entity: {class: Digital3i\EMarketingBundle\Entity\Usuario, property: email }   

    encoders:
        #Digital3i\EMarketingBundle\Entity\Usuario:
        #    algorithm:   sha1
        #    iterations: 1
        #    encode_as_base64: false

        Symfony\Component\Security\Core\User\User:
            algorithm:   sha1
            iterations: 1
            encode_as_base64: false
            

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  /
            form_login:
                check_path: /login_check
                login_path: /login
            logout:
                path:   /logout
                target: /
            security: true

        secured_area:
            pattern:    /
            form_login:
                check_path: /admin/login_check   
                login_path: /admin/login
            logout:
                path:   /admin/logout
                target: /
            anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_denied_url: /login
    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/_internal, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
